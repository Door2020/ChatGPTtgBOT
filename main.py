import openai
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import requests

admin_id = #your id
telegram_token = "Telegram_token"
openai.api_key = "openai_token"

bot = Bot(telegram_token)
dp = Dispatcher(bot)

@dp.message_handler(commands=['info'])
async def help_command(message: types.Message):
    await message.reply('–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ - @Name')

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    await message.reply('–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–º–∞–Ω–¥:\n/start - –Ω–∞—á–∞–ª—å–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞ \n'
'/img[—Ç–µ–∫—Å—Ç] - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ—Ç–æ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é \n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n/info - —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Ç–≤–æ')

@dp.message_handler(commands=['start'])
async def greet_user(message: types.Message):
    await message.reply('''–ü—Ä–∏–≤–µ—Ç‚úåÔ∏è

ChatGPT - –∫—Ä—É–ø–Ω–µ–π—à–∞—è —è–∑—ã–∫–æ–≤–∞—è –º–æ–¥–µ–ª—å, —Å–æ–∑–¥–∞–Ω–Ω–∞—è OpenAI.
–û–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤–∞–º –≤–æ –º–Ω–æ–≥–∏—Ö –∞—Å–ø–µ–∫—Ç–∞—Ö.
üî•–í —Ç–æ–º —á–∏—Å–ª–µ –∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µüî•
–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–º–∞–Ω–¥ –∏ —Ç–¥ - /help
üëá–Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ãüëá''')




@dp.message_handler(commands=['img'])
async def send_image(message: types.Message):
    if message.text == '/img':
        await message.answer('–ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤üò°')
    else:
        await message.answer('Dalle-e 2: –û–∂–∏–¥–∞–π—Ç–µ, –∏–¥–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è‚è≥')
        response = openai.Image.create(
            prompt=message.text,
            n=1,
            size="1024x1024",
        )
        await message.answer_photo(response["data"][0]["url"])



@dp.message_handler()
async def send(message: types.Message):
    await message.answer('ChatGPT: –û–∂–∏–¥–∞–π—Ç–µ, –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç‚è≥')
    response = openai.Completion.create(
        model="text-davinci-003",
        prompt=message.text,
        temperature=0.9,
        max_tokens=2000,
        top_p=1.0,
        frequency_penalty=0.0,
        presence_penalty=0.6,
    )
    await message.answer(response['choices'][0]['text'])





if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)

